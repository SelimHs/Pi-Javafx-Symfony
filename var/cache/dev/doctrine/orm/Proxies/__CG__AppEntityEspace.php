<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Espace extends \App\Entity\Espace implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'Type_espace' => [parent::class, 'Type_espace', null],
        "\0".parent::class."\0".'adresse' => [parent::class, 'adresse', null],
        "\0".parent::class."\0".'capacite' => [parent::class, 'capacite', null],
        "\0".parent::class."\0".'disponibilite' => [parent::class, 'disponibilite', null],
        "\0".parent::class."\0".'idEspace' => [parent::class, 'idEspace', null],
        "\0".parent::class."\0".'image' => [parent::class, 'image', null],
        "\0".parent::class."\0".'nomEspace' => [parent::class, 'nomEspace', null],
        "\0".parent::class."\0".'organisateurs' => [parent::class, 'organisateurs', null],
        "\0".parent::class."\0".'prix' => [parent::class, 'prix', null],
        "\0".parent::class."\0".'user' => [parent::class, 'user', null],
        'Type_espace' => [parent::class, 'Type_espace', null],
        'adresse' => [parent::class, 'adresse', null],
        'capacite' => [parent::class, 'capacite', null],
        'disponibilite' => [parent::class, 'disponibilite', null],
        'idEspace' => [parent::class, 'idEspace', null],
        'image' => [parent::class, 'image', null],
        'nomEspace' => [parent::class, 'nomEspace', null],
        'organisateurs' => [parent::class, 'organisateurs', null],
        'prix' => [parent::class, 'prix', null],
        'user' => [parent::class, 'user', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
