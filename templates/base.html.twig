<!DOCTYPE html>
<html lang="en">
    {% include 'partials/head.html.twig' %}

    <body>
      
<style>
  #chatbot-toggle.opened {
    color: white; /* ‚ùå en blanc */
    background: #f35525; /* conserve la couleur orange */
  }
  #chatbot-toggle {
    position: fixed;
    bottom: 90px; /* ‚¨ÜÔ∏è remont√© */
    right: 20px;
    background: #f35525;
    color: white;
    padding: 14px;
    border-radius: 50%;
    font-size: 22px;
    cursor: pointer;
    z-index: 1000;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
  
  #chatbot-box {
    position: fixed;
    bottom: 160px;
    right: 20px;
    width: 360px; /* üìè plus large */
    height: 480px; /* üìè plus haut */
    background: white;
    border-radius: 12px;
    display: none;
    flex-direction: column;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    z-index: 1000;
  }
  
  #chat-header {
    background: #f35525;
    color: white;
    padding: 12px;
    font-weight: bold;
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  #chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 12px;
    font-size: 0.9rem;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  #chat-input {
    border: none;
    border-top: 1px solid #ccc;
    padding: 12px;
    font-size: 0.95rem;
    box-sizing: border-box;
    width: 100%;
  }
  
  .msg {
    padding: 10px 14px;
    border-radius: 16px;
    max-width: 85%;
    line-height: 1.4;
    word-wrap: break-word;
  }
  
  .msg.user {
    background: #f0f0f0;
    align-self: flex-end;
    text-align: right;
  }
  
  .msg.bot {
    background: #eaf6ff;
    align-self: flex-start;
    text-align: left;
  }
  
  .msg.typing {
    background: #fff3cd;
    color: #856404;
    font-style: italic;
    align-self: flex-start;
  }






  #theme-toggle {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    background-color: #f35525;
    border: none;
    color: white;
    font-size: 18px;
    padding: 10px;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  #theme-toggle:hover {
    background-color: #d84315;
  }
  
  /* DARK MODE STYLES */
  body.dark-mode {
    background-color: #1a1a1a;
    color: #f1f1f1;
  }
  
  body.dark-mode .section,
  body.dark-mode .container,
  body.dark-mode .video-content,
  body.dark-mode .contact-content,
  body.dark-mode .featured,
  body.dark-mode .properties,
  body.dark-mode .fun-facts {
    background-color: #222;
  }
  
  body.dark-mode .section-heading h2,
  body.dark-mode h4,
  body.dark-mode h6,
  body.dark-mode p,
  body.dark-mode span,
  body.dark-mode li {
    color: #f1f1f1 !important;
  }
  
  body.dark-mode .category,
  body.dark-mode .main-button a,
  body.dark-mode input,
  body.dark-mode textarea {
    background-color: #333 !important;
    color: #f1f1f1 !important;
    border: 1px solid #444 !important;
  }
  /* üåô NAVBAR en DARK MODE */
body.dark-mode .header-area {
  background-color: #1a1a1a !important;
  border-bottom: 1px solid #333;
}

body.dark-mode .main-nav .nav a {
  color: #f1f1f1 !important; /* texte clair */
  transition: color 0.3s ease;
}

body.dark-mode .main-nav .nav a:hover,
body.dark-mode .main-nav .nav a.active {
  color: #f35525 !important; /* orange vif pour hover/active */
}

body.dark-mode .main-nav .logo h1 {
  color: #ffffff !important;
}

body.dark-mode .menu-trigger span {
  color: #f1f1f1 !important;
}
body.dark-mode #chatbot-box {
  background-color: #1e1e2a !important;
  color: #f1f1f1;
}

body.dark-mode #chat-header {
  background-color: #2c2c3e !important;
  color: #f39c12;
}

body.dark-mode .msg.bot {
  background: rgba(243, 85, 37, 0.85);
  color: white;
}

body.dark-mode .msg.user {
  background: #ccc;
  color: black;
}

body.dark-mode #chat-input {
  background-color: #2c2c3e;
  color: white;
  border-top: 1px solid #444;
}
  
</style>

      <!-- Bouton flottant -->
<div id="chatbot-toggle">üí¨</div>

<!-- Fen√™tre de chat -->
<div id="chatbot-box" class="shadow">
  <div id="chat-header">ü§ñ Chatbot Lamma <span id="chat-close">‚úñ</span></div>
  <div id="chat-messages">
    <div class="msg bot">üëã Bonjour ! Je suis votre assistant personnalis√© pour la plateforme Lamma. 
      Je peux vous aider √† trouver des √©v√©nements, des espaces disponibles ou des produits en stock.
    </div>
  </div>
  <input type="text" id="chat-input" placeholder="Posez votre question...">
</div>

<script>
  const toggleBtn = document.getElementById('chatbot-toggle');
  const chatBox = document.getElementById('chatbot-box');
  const closeBtn = document.getElementById('chat-close');
  const input = document.getElementById('chat-input');
  const messages = document.getElementById('chat-messages');

  toggleBtn.onclick = () => {
    const isVisible = chatBox.style.display === 'flex';
  
    chatBox.style.display = isVisible ? 'none' : 'flex';
    toggleBtn.textContent = isVisible ? 'üí¨' : '‚ùå';
    toggleBtn.classList.toggle('opened', !isVisible);
  };
  closeBtn.onclick = () => chatBox.style.display = 'none';

  input.addEventListener('keydown', e => {
    if (e.key === 'Enter' && input.value.trim()) {
      const userMsg = input.value.trim();
      messages.innerHTML += `<div class="msg user">${userMsg}</div>`;
      input.value = '';

      // ‚è≥ Afficher "L'assistant r√©dige..."
      const typingIndicator = document.createElement('div');
      typingIndicator.className = 'msg typing';
      typingIndicator.textContent = "‚è≥ L‚Äôassistant est en train d‚Äô√©crire...";
      messages.appendChild(typingIndicator);
      messages.scrollTop = messages.scrollHeight;

      fetch('/api/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message: userMsg })
      })
        .then(res => res.json())
        .then(data => {
          typingIndicator.remove();
          messages.innerHTML += `<div class="msg bot">${data.reply}</div>`;
          messages.scrollTop = messages.scrollHeight;
        })
        .catch(() => {
          typingIndicator.remove();
          messages.innerHTML += `<div class="msg bot">‚ùå Une erreur est survenue.</div>`;
        });
    }
  });
</script>



        {% include 'partials/header.html.twig' %}


        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>


        <script src="{{ asset('assets/jquery/jquery.min.js') }}"></script>
        <script src="{{ asset('assets/js/bootstrap.min.js') }}"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

        <script src="{{ asset('assets/js/isotope.min.js') }}"></script>
        <script src="{{ asset('assets/js/owl-carousel.js') }}"></script>
        <script src="{{ asset('assets/js/counter.js') }}"></script>
        <script src="{{ asset('assets/js/custom.js') }}"></script>
        {% block body %}
        {%include 'partials/indexBody.html.twig'%}

        {% endblock %}
        {% include 'partials/footer.html.twig' %}
    </body>
    <button id="theme-toggle" title="Basculer le th√®me">üåì</button>
    <script>
      const themeToggle = document.getElementById('theme-toggle');
      const body = document.body;
    
      // Set theme on load based on saved preference
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme === 'dark') {
        body.classList.add('dark-mode');
      } else {
        body.classList.remove('dark-mode');
      }
    
      // Toggle dark/light mode
      themeToggle.addEventListener('click', () => {
        const isDark = body.classList.toggle('dark-mode');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    </script>
    
</html>
{% block javascripts %}
<script>
  console.log("‚úÖ JS charg√© correctement"); // üëà TEST
</script>
{% endblock %}
