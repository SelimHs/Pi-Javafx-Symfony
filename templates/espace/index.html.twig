{% extends 'base.html.twig' %}

{% block title %}Espaces{% endblock %}

{% block body %}
<div class="page-heading header-text">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <span class="breadcrumb"><a href="{{ path('app_home') }}">Accueil</a> / Espaces</span>
        <h3>Espaces</h3>
      </div>
    </div>
  </div>
</div>

<div class="section properties">
  <div class="container">

    <!-- Barre de recherche -->
    <div class="row mb-4">
      <div class="col-lg-12 text-center">
        <input type="text" id="searchEspace" class="form-control w-50 mx-auto" placeholder="Rechercher un espace...">
      </div>
    </div>
    <div class="row mb-4">
  <div class="col-lg-12 text-center">
    <a href="{{ path('app_cronofy_reservations') }}" class="btn btn-outline-dark">
      üìã Consulter toutes les r√©servations
    </a>
  </div>
</div>


    <!-- Liste des espaces -->
    <div class="row properties-box" id="espaceGrid">

      <!-- ‚úÖ Carte Ajouter un Espace -->
      <div class="col-lg-4 col-md-6 align-self-center mb-30 properties-items espace-card">
        <a href="{{ path('app_espace_new') }}" class="text-decoration-none">
          <div class="item position-relative shadow-sm text-center d-flex flex-column justify-content-center align-items-center add-espace-card"
               style="height: 100%; min-height: 420px;">
            <i class="fa fa-plus-circle fa-3x text-white mb-3"></i>
            <h5 class="text-white">Cr√©er un nouvel espace</h5>
            <p class="text-white">Cliquez ici pour ajouter un nouvel espace</p>
          </div>
        </a>
      </div>

      <!-- ‚úÖ Cartes des espaces -->
      {% for espace in espaces %}
        <div class="col-lg-4 col-md-6 align-self-center mb-30 properties-items espace-card">
          <div class="item position-relative shadow-sm" style="transition: transform 0.3s;">
            <a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}">
              <img 
                src="{{ asset('uploads/' ~ (espace.image is not empty ? espace.image : 'exemple.jpg')) }}" 
                class="card-img-top" 
                alt="{{ espace.nomEspace }}"
              >
              {% if espace.image is empty %}
                <span class="badge badge-secondary position-absolute" style="top: 10px; left: 10px;">Placeholder</span>
              {% endif %}
            </a>
            <span class="category">{{ espace.TypeEspace }}</span>
            <h6>{{ espace.prix }} Dt</h6>
            <h4>
              <a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}">
                {{ espace.nomEspace }}
              </a>
            </h4>
            <ul>
              <li>Adresse : <span>{{ espace.adresse }}</span></li>
              <li>Capacit√© : <span>{{ espace.capacite }}</span></li>
              <li>
                Disponibilit√© :
                <span class="badge {{ espace.disponibilite == 'Disponible' ? 'bg-success' : 'bg-danger' }}">
                  {{ espace.disponibilite }}
                </span>
              </li>
              <p class="text-muted">üìÜ La r√©servation doit commencer au moins 7 jours √† partir d‚Äôaujourd‚Äôhui.</p>

            </ul>
            <div class="main-button d-flex flex-column gap-2 align-items-center mt-2">
              <a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}" class="btn btn-outline-primary w-75">üîç D√©tails</a>
              <button class="btn btn-outline-success w-75" data-bs-toggle="modal" data-bs-target="#reservationModal{{ espace.idEspace }}">üìÖ R√©server</button>
            </div>
          </div>
        </div>

       <!-- Modal R√©servation -->
<div class="modal fade" id="reservationModal{{ espace.idEspace }}" tabindex="-1" aria-labelledby="modalLabel{{ espace.idEspace }}" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ path('api_espace_reserver', {'idEspace': espace.idEspace}) }}">
        <div class="modal-header">
          <h5 class="modal-title" id="modalLabel{{ espace.idEspace }}">R√©server {{ espace.nomEspace }}</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label>Nom complet</label>
            <input type="text" name="nom_complet" class="form-control" required>
          </div>
          <div class="mb-3">
            <label>Date d√©but</label>
            <input type="date" name="start_date" class="form-control" required>
          </div>
          <div class="mb-3">
            <label>Date fin</label>
            <input type="date" name="end_date" class="form-control" required>
          </div>
          {% if espace.organisateurs is not empty %}
          <div class="mb-3">
            <label>Organisateur</label>
            <select name="id_organisateur" class="form-select">
              {% for org in espace.organisateurs %}
                <option value="{{ org.id_org }}">{{ org.nom_org }} {{ org.prenom_org }}</option>
              {% endfor %}
            </select>
          </div>
          {% endif %}
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-success">Valider</button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
        </div>
      </form>
    </div>
  </div>
</div>
      {% else %}
        <div class="col-12 text-center">
          <div class="alert alert-warning">Aucun espace trouv√©.</div>
        </div>
      {% endfor %}
    </div>

    <!-- ‚úÖ Pagination dynamique JS -->
    <div class="row mt-4 justify-content-center">
      <div class="col-auto">
        <button class="btn btn-outline-primary me-2" id="prevBtn">‚Üê Pr√©c√©dent</button>
        <span id="pageInfo" class="align-middle"></span>
        <button class="btn btn-outline-primary ms-2" id="nextBtn">Suivant ‚Üí</button>
      </div>
    </div>
  </div>
</div>

<!-- ‚úÖ Bouton retour en haut -->
<button onclick="scrollToTop()" id="scrollTopBtn" title="Retour en haut">‚¨Ü</button>

<!-- Bootstrap Modal JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
  const searchInput = document.getElementById('searchEspace');
  const cards = Array.from(document.querySelectorAll('.espace-card'));
  const itemsPerPage = 6;
  let currentPage = 1;

  function updatePagination() {
    const query = searchInput.value.toLowerCase();
    const filteredCards = cards.filter(card => card.textContent.toLowerCase().includes(query));

    filteredCards.forEach((card, index) => {
      const start = (currentPage - 1) * itemsPerPage;
      const end = currentPage * itemsPerPage;
      card.style.display = index >= start && index < end ? '' : 'none';
    });

    const totalPages = Math.ceil(filteredCards.length / itemsPerPage);
    document.getElementById('pageInfo').textContent = `Page ${currentPage} / ${totalPages || 1}`;
    document.getElementById('prevBtn').disabled = currentPage === 1;
    document.getElementById('nextBtn').disabled = currentPage === totalPages;
  }

  searchInput.addEventListener('input', () => {
    currentPage = 1;
    updatePagination();
  });

  document.getElementById('prevBtn').addEventListener('click', () => {
    currentPage--;
    updatePagination();
  });

  document.getElementById('nextBtn').addEventListener('click', () => {
    currentPage++;
    updatePagination();
  });

  const scrollBtn = document.getElementById("scrollTopBtn");
  window.onscroll = () => {
    scrollBtn.style.display = (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) ? "block" : "none";
  };

  function scrollToTop() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  updatePagination();
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // ‚úÖ Calculer la date minimum (7 jours √† partir de maintenant)
    const now = new Date();
    const minStart = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);
    const formattedMinStart = minStart.toISOString().slice(0, 16);

    // Appliquer la date minimum sur tous les champs start_date
    document.querySelectorAll('input[name="start_date"]').forEach(startInput => {
      startInput.setAttribute('min', formattedMinStart);

      // Lorsqu‚Äôon change la date de d√©but, mettre √† jour le min de la date de fin
      startInput.addEventListener('change', function () {
        const endInput = this.closest('form').querySelector('input[name="end_date"]');
        if (endInput) {
          endInput.setAttribute('min', this.value);
        }
      });
    });

    // ‚úÖ Contr√¥le de la date de fin
    document.querySelectorAll('input[name="end_date"]').forEach(endInput => {
      endInput.addEventListener('change', function () {
        const startInput = this.closest('form').querySelector('input[name="start_date"]');
        if (startInput && this.value < startInput.value) {
          alert("‚ùå La date de fin doit √™tre apr√®s la date de d√©but !");
          this.value = "";
        }
      });
    });
  });
</script>


{% endblock %}
