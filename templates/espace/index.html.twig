{% extends 'base.html.twig' %}

{% block title %}Espaces{% endblock %}

{% block body %}
<div class="page-heading header-text">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <span class="breadcrumb"><a href="{{ path('app_home') }}">Accueil</a> / Espaces</span>
        <h3>Espaces</h3>
      </div>
    </div>
  </div>
</div>

<div class="section properties">
  <div class="container">
    <div class="row mb-4">
      <div class="col-lg-12 text-center">
        <input type="text" id="searchEspace" class="form-control w-50 mx-auto" placeholder="Rechercher un espace...">
      </div>
    </div>
    <div class="row mb-4">
      <div class="col-lg-12 text-center">
        <a href="{{ path('app_reservations_liste') }}" class="btn btn-dark">📋 Voir les réservations</a>
      </div>
    </div>

    <div class="row properties-box" id="espaceGrid">
      <div class="col-lg-4 col-md-6 align-self-center mb-30 properties-items espace-card">
        <a href="{{ path('app_espace_new') }}" class="text-decoration-none">
          <div class="item position-relative shadow-sm text-center d-flex flex-column justify-content-center align-items-center add-espace-card" style="height: 100%; min-height: 420px;">
            <i class="fa fa-plus-circle fa-3x text-white mb-3"></i>
            <h5 class="text-white">Créer un nouvel espace</h5>
            <p class="text-white">Cliquez ici pour ajouter un nouvel espace</p>
          </div>
        </a>
      </div>

      {% for espace in espaces %}
        <div class="col-lg-4 col-md-6 align-self-center mb-30 properties-items espace-card">
          <div class="item position-relative shadow-sm">
            <a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}">
              <img src="{{ asset('uploads/' ~ (espace.image is not empty ? espace.image : 'exemple.jpg')) }}" class="card-img-top" alt="{{ espace.nomEspace }}">
            </a>
            <span class="category">{{ espace.TypeEspace }}</span>
            <h6>{{ espace.prix }} Dt</h6>
            <h4><a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}">{{ espace.nomEspace }}</a></h4>
            <ul>
              <li>Adresse : <span>{{ espace.adresse }}</span></li>
              <li>Capacité : <span>{{ espace.capacite }}</span></li>
              <li>Disponibilité : <span class="badge {{ espace.disponibilite == 'Disponible' ? 'bg-success' : 'bg-danger' }}">{{ espace.disponibilite }}</span></li>
            </ul>
            <div class="main-button d-flex flex-column gap-2 align-items-center mt-2">
              <a href="{{ path('app_espace_show', {'idEspace': espace.idEspace}) }}" class="btn btn-outline-primary w-75">🔍 Détails</a>
              <button class="btn btn-outline-success w-75" data-bs-toggle="modal" data-bs-target="#reservationModal{{ espace.idEspace }}">📅 Réserver</button>
            </div>
          </div>
        </div>

        <div class="modal fade" id="reservationModal{{ espace.idEspace }}" tabindex="-1" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <form class="reservation-form" data-espace-id="{{ espace.idEspace }}">
                <div class="modal-header">
                  <h5 class="modal-title">Réserver {{ espace.nomEspace }}</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                  <div class="mb-3">
                    <label>Nom complet</label>
                    <input type="text" name="nom_complet" class="form-control" required>
                  </div>
                  <div class="mb-3">
                    <label>Date début</label>
                    <input type="datetime-local" name="date_debut" class="form-control" required>
                  </div>
                  <div class="mb-3">
                    <label>Date fin</label>
                    <input type="datetime-local" name="date_fin" class="form-control" required>
                  </div>
                  {% if espace.organisateurs is not empty %}
                  <div class="mb-3">
                    <label>Organisateur</label>
                    <select name="id_organisateur" class="form-select">
                      {% for org in espace.organisateurs %}
                        <option value="{{ org.id_org }}">{{ org.nom_org }} {{ org.prenom_org }}</option>
                      {% endfor %}
                    </select>
                  </div>
                  {% endif %}
                </div>
                <div class="modal-footer">
                  <button type="submit" class="btn btn-primary">Valider</button>
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      {% else %}
        <div class="col-12 text-center">
          <div class="alert alert-warning">Aucun espace trouvé.</div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener("DOMContentLoaded", function () {
  const today = new Date();
  const minStartDate = new Date(today.setDate(today.getDate() + 7)).toISOString().slice(0, 16);

  document.querySelectorAll('.reservation-form').forEach(form => {
    const dateDebutInput = form.querySelector('input[name="date_debut"]');
    const dateFinInput = form.querySelector('input[name="date_fin"]');

    // 🗓️ Empêcher date début avant aujourd’hui + 7 jours
    if (dateDebutInput) dateDebutInput.min = minStartDate;

    // 🛡️ Empêcher soumission si dates invalides
    form.addEventListener('submit', async function (e) {
      e.preventDefault();

      const dateDebut = new Date(dateDebutInput.value);
      const dateFin = new Date(dateFinInput.value);

      // ⛔ Validation côté client
      if (dateDebut < new Date(minStartDate)) {
        alert("❌ La date de début doit être au minimum 7 jours après aujourd’hui.");
        return;
      }

      if (dateFin <= dateDebut) {
        alert("❌ La date de fin doit être au moins 1 jour après la date de début.");
        return;
      }

      const idEspace = this.dataset.espaceId;
      const formData = new FormData(this);

      const payload = {
        nom_complet: formData.get('nom_complet')?.trim() || '',
        date_debut: formData.get('date_debut') || '',
        date_fin: formData.get('date_fin') || '',
        id_espace: idEspace,
        id_organisateur: formData.get('id_organisateur') || ''
      };

      try {
        const response = await fetch("{{ path('api_reserver_sheetbest') }}", {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });

        const result = await response.json();

        if (result.success) {
          alert("✅ Réservation enregistrée !");
          const closeBtn = this.closest('.modal').querySelector('.btn-close');
          if (closeBtn) closeBtn.click();
        } else {
          alert("❌ Erreur lors de l'enregistrement : " + JSON.stringify(result));
        }
      } catch (error) {
        console.error("❌ Erreur technique :", error);
        alert("❌ Une erreur est survenue : " + error.message);
      }
    });
  });
});

</script>

{% endblock %}
