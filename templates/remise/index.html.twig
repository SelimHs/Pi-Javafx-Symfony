{% extends 'baseBack.html.twig' %}

{% block title %}Liste des Remises{% endblock %}

{% block body %}
<div class="app-main__outer">
  <div class="app-main__inner">
    <div class="app-page-title">
      <div class="page-title-wrapper">
        <div class="page-title-heading">
          <div class="page-title-icon">
            <i class="pe-7s-gift icon-gradient bg-happy-fisher"></i>
          </div>
          <div>Gestion des Remises
            <div class="page-title-subheading">Liste des codes promo et détails associés.</div>
          </div>
        </div>
        <div class="page-title-actions">
          <a href="{{ path('app_remise_new') }}" class="btn btn-success">
            <i class="pe-7s-plus mr-2"></i> Nouvelle Remise
          </a>
        </div>
      </div>
    </div>

    <div class="main-card mb-3 card">
      <div class="card-header d-flex justify-content-between align-items-center flex-wrap gap-2">
        <div class="d-flex align-items-center gap-2">
          <input type="text" id="remiseSearch" class="form-control form-control-sm" placeholder="🔍 Rechercher une remise..." style="width: 200px;">
          <div class="d-flex align-items-center gap-2">
            <label for="sortPourcentage" class="mb-0">Trier par :</label>
            <select id="sortPourcentage" class="form-select form-select-sm rounded-pill" style="width: 180px;">
              <option value="">-- % Remise --</option>
              <option value="asc">🔼 % Croissant</option>
              <option value="desc">🔽 % Décroissant</option>
            </select>
          </div>
        </div>
      </div>

      <div class="table-responsive">
        <table class="align-middle mb-0 table table-striped table-hover">
          <thead>
            <tr>
              <th class="text-center">#</th>
              <th>Code Promo</th>
              <th>Description</th>
              <th class="text-center">Réduction (%)</th>
              <th class="text-center">Date Expiration</th>
              <th class="text-center">Réservations</th>
              <th class="text-center">Actions</th>
            </tr>
          </thead>
          <tbody id="remiseTableBody">
            {% for remise in remises %}
              <tr class="remise-row">
                <td class="text-center text-muted">#{{ remise.idRemise }}</td>
                <td><strong>{{ remise.codePromo }}</strong></td>
                <td>{{ remise.description }}</td>
                <td class="text-center pourcentage-value">{{ remise.pourcentageRemise }}</td>
                <td class="text-center">{{ remise.dateExpiration }}</td>
                <td class="text-center">{{ remise.reservations|length }}</td>
                <td class="text-center">
                  <a href="{{ path('app_remise_show', {'idRemise': remise.idRemise}) }}" class="btn btn-sm btn-info">Voir</a>
                  <a href="{{ path('app_remise_edit', {'idRemise': remise.idRemise}) }}" class="btn btn-sm btn-warning">Modifier</a>
                </td>
              </tr>
            {% else %}
              <tr>
                <td colspan="7" class="text-center text-muted">Aucune remise enregistrée.</td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const searchInput = document.getElementById('remiseSearch');
  const sortSelect = document.getElementById('sortPourcentage');
  const tbody = document.getElementById('remiseTableBody');

  function filterRows() {
    const query = searchInput.value.toLowerCase();
    const rows = document.querySelectorAll('#remiseTableBody .remise-row');

    rows.forEach(row => {
      const text = row.textContent.toLowerCase();
      row.style.display = text.includes(query) ? '' : 'none';
    });
  }

  function sortRows() {
    const rows = Array.from(document.querySelectorAll('#remiseTableBody .remise-row'));
    const sortOrder = sortSelect.value;

    rows.sort((a, b) => {
      const aPourcentage = parseInt(a.querySelector('.pourcentage-value').textContent);
      const bPourcentage = parseInt(b.querySelector('.pourcentage-value').textContent);

      if (sortOrder === 'asc') {
        return aPourcentage - bPourcentage;
      } else if (sortOrder === 'desc') {
        return bPourcentage - aPourcentage;
      }
      return 0;
    });

    tbody.innerHTML = '';
    rows.forEach(row => tbody.appendChild(row));
  }

  searchInput.addEventListener('input', filterRows);
  sortSelect.addEventListener('change', sortRows);
});
</script>
{% endblock %}
